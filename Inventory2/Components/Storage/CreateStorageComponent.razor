@using Entities
@using Business

    <div class="container">
        <div class="row mb-2">
            <EditForm Model="oStorage">

                <div class="form-group">
                    <label>Bodega</label>
                    <InputSelect @bind-Value="oStorage.WarehouseId" class="form-control">
                        <option value="">Seleccione una bodega...</option>
                        @foreach (var warehouse in warehouses)
                        {
                            <option value="@warehouse.WarehouseId">@warehouse.WarehouseName</option>

                        }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <label>Producto</label>
                    <InputSelect @bind-Value="oStorage.ProductId" class="form-control">
                        <option value="">Seleccione una bodega...</option>
                        @foreach (var product in products)
                        {
                            <option value="@product.ProductId">@product.ProductName</option>

                        }
                    </InputSelect>
                </div>
                <input type="button" value="Almacenar producto" @onclick="SaveStorage" class="btn btn-success" />

            </EditForm>
        </div>
    </div>

<div class="container">
    <div class="row">
        <div class="alert alert-@alert mt-2" role="alert">
            @message
        </div>
    </div>
</div>



@code {
    StorageEntity oStorage = new StorageEntity();

    List<WarehouseEntity> warehouses = new List<WarehouseEntity>();
    List<ProductEntity> products = new List<ProductEntity>();

    string message;
    string alert;

    protected override async Task OnInitializedAsync()
    {
        warehouses = B_Warehouse.WarehouseList();
        products = B_Product.ProductList();



    }

    private void SaveStorage()
    {
        oStorage.StorageId = $"{oStorage.WarehouseId}-{oStorage.ProductId}";

        if (!B_Storage.IsProductinWarehouse(oStorage.StorageId))
        {
            oStorage.LastUpdate = DateTime.Now;
            B_Storage.CreateStorage(oStorage);
            message = "Producto registrado";
            alert = "success";





        }
        else
        {
            message = "El producto ya se encuntra en la bodega";
             alert = "warning";
        }

    }
}
