@using Entities
@using Business




@code{ int scopeNumberA = 0;}
@code{ int optionVal = 1;}
<hr />
<select class="custom-select bg-primary" @onchange="CambioCategoria">
    <option value="">Seleccione categoria...</option>
    <option value="all">Mostrar todos</option>
    @foreach (var category in categories)
    {
        <option value="@category.CategoryId">@category.CategoryName</option>
    }
</select>

<hr />


<table class="table table-hover table-dark">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">ID</th>
            <th scope="col">Nombre</th>
            <th scope="col">Descripción</th>
            <th scope="col">Cantidad total</th>
            <th scope="col">Categoria</th>
            <th scope="col"></th>
        </tr>
    </thead>


    <tbody>
        @foreach (var product in tempProducts)
        {

            <tr>

                @{scopeNumberA++;}
                <th scope="row">@scopeNumberA</th>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.ProductDescription</td>
                <td>@product.TotalQuantity</td>
                <td><a href="product/update/@product.ProductId">Editar</a></td>
            </tr>


        }
    </tbody>
</table>
@message

@code {

    List<ProductEntity> products = new List<ProductEntity>();
    List<ProductEntity> tempProducts = new List<ProductEntity>();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    string message;



    protected override async Task OnInitializedAsync()
    {
        products = B_Product.ProductList();
        tempProducts = products;
        categories = B_Category.CategoryList();


    }
    // La variable e hace referencia a "evento" pero puede ser cualquiera variable 
    //ChangeEventArgs reconoce un cambio de vento
    private void CambioCategoria(ChangeEventArgs e)
    {
        //Recive el valor del select (value)
        //Las utilidades pueden desde ver el contenido que obtine 
        //hasta realizar validaciones
        message = e.Value.ToString();
        if (message == "all")
        {
         
            tempProducts = products.ToList();

        }
        else
        {
            tempProducts = products.Where(c => c.CategoryId == e.Value.ToString()).ToList();
        }
        
    }
}
